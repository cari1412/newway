import { Section, Cell, List, Button } from '@telegram-apps/telegram-ui';
import type { FC } from 'react';
import { useParams } from 'react-router-dom';
import { Page } from '@/components/Page';

interface PlanFeature {
  icon: string;
  title: string;
  description: string;
}

interface PlanDetails {
  id: string;
  name: string;
  countryName: string;
  flag: string;
  price: number;
  data: string;
  validity: string;
  description: string;
  features: PlanFeature[];
  coverageAreas: string[];
  instructions: string[];
}

export const PlanDetails: FC = () => {
  const { planId } = useParams();

  // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö, –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–æ–ª–∂–Ω—ã –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è —Å –±—ç–∫–µ–Ω–¥–∞
  const plan: PlanDetails = {
    id: 'us-1',
    name: '–ü—Ä–µ–º–∏—É–º –°–®–ê',
    countryName: '–°–®–ê',
    flag: 'üá∫üá∏',
    price: 29.99,
    data: '10 GB',
    validity: '30 –¥–Ω–µ–π',
    description: '–í—ã—Å–æ–∫–æ—Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –°–®–ê —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π 4G/5G —Å–µ—Ç–µ–π.',
    features: [
      {
        icon: 'üì±',
        title: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è',
        description: '–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ eSIM —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏'
      },
      {
        icon: 'üåê',
        title: '4G/5G –ø–æ–∫—Ä—ã—Ç–∏–µ',
        description: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—ã—Å–æ–∫–æ—Å–∫–æ—Ä–æ—Å—Ç–Ω—ã—Ö —Å–µ—Ç–µ–π'
      },
      {
        icon: 'üîÑ',
        title: '–ê–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ',
        description: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–¥–ª–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞'
      }
    ],
    coverageAreas: [
      '–í—Å–µ 50 —à—Ç–∞—Ç–æ–≤ –°–®–ê',
      '–ê–ª—è—Å–∫–∞',
      '–ì–∞–≤–∞–π–∏',
      '–ü—É—ç—Ä—Ç–æ-–†–∏–∫–æ'
    ],
    instructions: [
      '–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏',
      '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ eSIM –ø—Ä–æ—Ñ–∏–ª—å',
      '–í–∫–ª—é—á–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—á—É –¥–∞–Ω–Ω—ã—Ö',
      '–ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!'
    ]
  };

  const handlePurchase = () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∫—É–ø–∫–∏ —Ç–∞—Ä–∏—Ñ–∞
    console.log('–ü–æ–∫—É–ø–∫–∞ —Ç–∞—Ä–∏—Ñ–∞:', planId);
  };

  return (
    <Page>
      <List>
        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <Section>
          <Cell
            before={<span style={{ fontSize: '24px' }}>{plan.flag}</span>}
            after={`${plan.price}$`}
            subtitle={`${plan.data} ‚Ä¢ ${plan.validity}`}
          >
            {plan.name}
          </Cell>
        </Section>

        {/* –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞ */}
        <Section header="–û–ø–∏—Å–∞–Ω–∏–µ">
          <Cell multiline>{plan.description}</Cell>
        </Section>

        {/* –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ */}
        <Section header="–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏">
          {plan.features.map((feature, index) => (
            <Cell
              key={index}
              before={<span style={{ fontSize: '20px' }}>{feature.icon}</span>}
              subtitle={feature.description}
              multiline
            >
              {feature.title}
            </Cell>
          ))}
        </Section>

        {/* –ó–æ–Ω–∞ –ø–æ–∫—Ä—ã—Ç–∏—è */}
        <Section header="–ó–æ–Ω–∞ –ø–æ–∫—Ä—ã—Ç–∏—è">
          {plan.coverageAreas.map((area, index) => (
            <Cell key={index}>{area}</Cell>
          ))}
        </Section>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ */}
        <Section header="–ö–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å">
          {plan.instructions.map((instruction, index) => (
            <Cell key={index} before={`${index + 1}.`}>
              {instruction}
            </Cell>
          ))}
        </Section>

        {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–∫—É–ø–∫–∏ */}
        <Section>
          <Cell>
            <div style={{ padding: '8px 0' }}>
              <Button size="l" stretched onClick={handlePurchase}>
                –ö—É–ø–∏—Ç—å –∑–∞ {plan.price}$
              </Button>
            </div>
          </Cell>
        </Section>
      </List>
    </Page>
  );
};